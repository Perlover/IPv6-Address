=head1 NAME

IPv6::Address

=head1 DESCRIPTION

Yet another class to represent and manipulate IPv6 Addresses. Includes a rudimentary IPv4 calculator library.

=head1 SYNOPSIS

 use IPv6::Address;

 my $ipv6 = IPv6::Address->new('2001:648:2000::/48');

 $ipv6->contains('2001:648:2000::/64'); #true

 say $ipv6->to_string;
 say $ipv6->string; # Same as previous
 say $ipv6; # Same as previous

 say $ipv6->string(nocompress=>1); # do not compress using the :: notation
 say $ipv6->string(ipv4=>1); #print the last 32 bits as an IPv4 address
 
 $ipv6->addr_string; # Returns '2001:648:2000::'
 
 $ipv6->split(4); # Split the prefix into 2^4 smaller prefixes. Returns a list.
 
 $ipv6->apply_mask; # Apply the mask to the address. All bits beyond the mask length become 0.


=head1 AUTHOR

Athanasios Douitsis <aduitsis@cpan.org>

=head1 LICENSE

Artistic v2.0. 


